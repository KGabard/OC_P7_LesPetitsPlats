// @mixin tablet {
//   @media screen and (max-width: 1024px) {
//     @content;
//   }
// }

@mixin mobile {
  @media screen and (max-width: 800px) {
    @content;
  }
}

@mixin small-mobile {
  @media screen and (max-width: 425px) {
    @content;
  }
}

@mixin typographies($type) {
  $typography: map-get($typographies, $type);
  @each $attribute, $val in $typography {
    #{$attribute}: #{$val};
  }
}

@mixin ellipsis($line-count) {
  display: -webkit-box;
  -webkit-line-clamp: $line-count;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin filters-color($parent-elmt: null, $lighten: 0%) {
  $custom-color-ingredient: transparent;
  $custom-color-appliance: transparent;
  $custom-color-utensil: transparent;
  @if $lighten > 0 {
    $custom-color-ingredient: lighten($highlight-ingredient, $lighten);
    $custom-color-appliance: lighten($highlight-appliance, $lighten);
    $custom-color-utensil: lighten($highlight-utensil, $lighten);
  } @else {
    $custom-color-ingredient: darken($highlight-ingredient, -$lighten);
    $custom-color-appliance: darken($highlight-appliance, -$lighten);
    $custom-color-utensil: darken($highlight-utensil, -$lighten);
  }

  @if $parent-elmt {
    #{$parent-elmt}--ingredient & {
      background-color: $custom-color-ingredient;
    }
    #{$parent-elmt}--appliance & {
      background-color: $custom-color-appliance;
    }
    #{$parent-elmt}--utensil & {
      background-color: $custom-color-utensil;
    }
  } @else {
    &--ingredient {
      background-color: $custom-color-ingredient;
    }
    &--appliance {
      background-color: $custom-color-appliance;
    }
    &--utensil {
      background-color: $custom-color-utensil;
    }
  }
}

@mixin screen-reader-only {
  width: 0;
  height: 0;
  position: absolute;
  overflow: hidden;
}
